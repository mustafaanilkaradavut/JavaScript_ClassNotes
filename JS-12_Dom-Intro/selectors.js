console.log("***** SELECTORS *****");

document.title = "FS16 ğŸš§";

/* -------------------------------------------------------------------------- */
//..                            GETELEMENTBYID()                              */
/* -------------------------------------------------------------------------- */

console.log(document.getElementById("add-new-item"));

//__ id'si add-new-item olan elementini seÃ§eriz.

const headerText = document.getElementById("add-new-item");
console.log(headerText);

//! Bu iÅŸlemle secilen elementin style property'sini manipule etmiÅŸ oluruz.
//__ her ÅŸey key-value ÅŸeklinde yazÄ±lÄ±r.
//__ headerText olarak yazabiliriz Ã§Ã¼nkÃ¼ yukarÄ±da tanÄ±mlamasÄ±nÄ± yaptÄ±k.

headerText.style.color = "blue";
headerText.style.backgroundColor = "yellow";
headerText.style.border = "2px solid red";

//! NOTE: property'ler de kebap-case deÄŸil camelCase notasyonu kullanÄ±lÄ±r.

//? NOTE
// headerText.style = "font-family: tahoma; font-size: 30px" //? CSS vari bir eriÅŸim, Ã§ok fazla kullanÄ±lmÄ±yor.

//? id'si btn olan elementi seÃ§eriz.
const addBtn = document.getElementById("btn");
console.log(addBtn);

//? HTML elementlerininin iÃ§eriklerini okuma ve deÄŸiÅŸtirme.
//? ------------------------------------------------------
const htmlLi = document.getElementById("html-li");
htmlLi.style.color = "red";

//? Bir text elementinin iÃ§eriÄŸi aÅŸaÄŸÄ±daki attribute'ler ile deÄŸiÅŸtirilebilir..
//! textContent, innerText, innerHTML
console.log(htmlLi.textContent);
htmlLi.textContent = "HTML5";
htmlLi.textContent = "<h2>HTML5</h2>";

document.getElementById("js-li").innerText = "JS";
document.getElementById("js-li").innerText = "<h2>JS</h2>";

document.getElementById("react-li").innerHTML = "React JS";
document.getElementById("react-li").innerHTML =
  "<h2 style='color: blue'>REACT JS</h2>";

//__ Sensitive verilerin olduÄŸu uygulama ve sayfalarda gÃ¼venlik sebebiyle innerHTML kullanmamalÄ±yÄ±z.

//?! input'larÄ±n deÄŸerinin okunmasÄ± ve yazÄ±lmasÄ±.
const myInput = document.getElementById("input");
console.log(myInput.value);

addBtn.value = "SUBMIT";

/* -------------------------------------------------------------------------- */
//..                         GETELEMENTSBYTAGNAME()                           */
/* -------------------------------------------------------------------------- */

const allLi = document.getElementsByTagName("li");
console.log(allLi); //__ HTML Collection

//__ HTML collection'daki her bir elemente indisleme ile eriÅŸilebilir.
console.log(allLi[1].textContent);
allLi[2].textContent = "JS-React";

//? Toplu bir ÅŸekilde eriÅŸim iÃ§in for yapÄ±larÄ± kullanÄ±labilir.
for (let li of allLi) {
  console.log(li.textContent);
}

//! array-like grubunda direk array metotlarÄ± kulanÄ±lamamz.
// allLi.forEach((li) => console.log(li))
//__ Ã‡Ã¶zÃ¼m olarak array-like grubu array'e Ã§evirilebilriz.

//? 1-spread
const arrAllLi = [...allLi];
console.log(arrAllLi);
arrAllLi.forEach((li) => (li.style.color = "fuchsia"));

//? 2-array.from()
console.log(Array.from(allLi));
Array.from(allLi).map((li) => (li.style.backgroundColor = "green"));

/* -------------------------------------------------------------------------- */
//..                        GETELEMENTSBYCLASSNAME()                          */
/* -------------------------------------------------------------------------- */

const myList = document.getElementsByClassName("list");
console.log(myList); //? HTML Collection

myList[0].innerText = "HTML Dersleri";

//? Ornek
document.getElementsByClassName("item-list")[0].style.color = "hotpink";

/* -------------------------------------------------------------------------- */
//..                               QUERYSELECTOR()                            */
/* -------------------------------------------------------------------------- */

//! Query Selector ile id, tag, class seÃ§ilebilir.
//! Bu seÃ§ici akÄ±ÅŸta gÃ¶rdÃ¼ÄŸÃ¼ ilk elementi seÃ§er.

//? id almak iÃ§in (#)
console.log(document.querySelector("#btn"));

//? class almak iÃ§in (.)
console.log(document.querySelector(".item-list"));

//? tag almak iÃ§in
console.log(document.querySelector("li")); //? ilk gÃ¶rdugu elementi secer

//? CSS selectorleri querySelector ile kullanÄ±labilir.
const myH3 = document.querySelector("main section.item-list h3");
console.log(myH3);

const xyz = document.querySelector(".item-list ul li:nth-child(3)");
xyz.style.backgroundColor = "gray";

//* ========================================
//*              QUERYSELECTORALL()
//* ========================================
const liste = document.querySelectorAll(".item-list .list");
console.log(liste); //? NodeList

//* querySelectorAll bir nodelist dondurur. Nodelist dahili olarak forEach metodunu barindirir. Ama istenirse spread veya Array.from() ile yine Array'e donusum yapilabilir.
liste.forEach((li) => console.log(li.innerText));
